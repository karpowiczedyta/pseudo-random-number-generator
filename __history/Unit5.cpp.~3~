//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit5.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm5 *Form5;
//---------------------------------------------------------------------------
__fastcall TForm5::TForm5(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm5::Button1Click(TObject *Sender)
{
     if((Edit1->Text.IsEmpty())  || (Edit2->Text.IsEmpty()) )
	ShowMessage("Nie podano zaadnych wartosci!!") ;
  else{
int N,n,K;
N = StrToInt(Edit1->Text);
n = StrToInt(Edit2->Text);
K = rand()% N +1;
//int K = 20;
int NminusK = N - K ;
int k = 0;
int i = 0;
int kR;
int silniaK = 1;
int silniak = 1;
int silniaKminusk=1;
int silniaNminusM=1;
int silnia_n_minus_k=1;
int silnia_z_odejmowaniem =1;
int silniaN=1;
int silnia_n=1;
int silnia_N_minus_n=1;



	if(n<K)
	kR=n;
	else if(K<n)
	kR=K;
	else if(K==n)
	kR=K;

	for (k = 0; k <= kR; k++) {

	   //obliczanie silni dla K-l.elementów wyróznionych w populacji generalnej:

	   for (i = 1; i <= K; i++) {
		  silniaK = silniaK*i;
	   }

	   // silnia z k!

	   for (i = 1; i <= k; i++) {
		  silniak = silniak*i;
	   }

	   //silnia z (K-k)!

	   int Kminusk = K-k;

		for (i = 1; i <= Kminusk ; i++) {
		  silniaKminusk = silniaKminusk*i;
	   }

	   int NminusK = N-K;

		for (i = 1; i <= NminusK ; i++) {
		  silniaNminusM = silniaNminusM*i;
	   }

	   int n_minus_k= n-k;


		for (i = 1; i <= n_minus_k ; i++) {
		  silnia_n_minus_k = silnia_n_minus_k*i;
	   }

	   int odejmowanie2WartosciWSilni= NminusK - n_minus_k;

	   for (i = 1; i <= odejmowanie2WartosciWSilni ; i++) {
		  silnia_z_odejmowaniem = silnia_z_odejmowaniem*i;
	   }

	   for (i = 1; i <= N; i++) {
		  silniaN = silniaN*i;
	   }

		for (i = 1; i <= n; i++) {
		  silnia_n = silnia_n*i;
	   }

		int N_minus_n = N-n;

		for (i = 1; i <= N_minus_n; i++) {
		  silnia_N_minus_n = silnia_N_minus_n*i;
	   }


		//float prawdopodobienstwo = (float)((silniaK/(silniak*silniaKminusk))*(silniaNminusM/(silnia_n_minus_k*silnia_z_odejmowaniem)))/((silniaN/(silnia_n*silnia_N_minus_n)));
		//Memo1->Lines->Add("Prawdopodobieñstwo dla k=" + IntToStr(kR)+ "wynosi: "+ CurrToStrF(prawdopodobienstwo,ffNumber,2));

	}

   float p,q;
   p = (float)K/(float)N;
   q = 1-p;
   Edit6->Text=CurrToStrF(p,ffNumber,2);

   float wartoscOczekiwana = (float)n*(float)p;
   float wariancja = (float)n*(float)p*(float)q*((float)(N-n)/(float)(N-1));
   float odchylenieStandardowe =sqrt(wariancja);

   Edit3->Text=CurrToStrF(wartoscOczekiwana,ffNumber,2);
   Edit4->Text=CurrToStrF(wariancja,ffNumber,2);
   Edit5->Text=CurrToStrF(odchylenieStandardowe,ffNumber,2);
}
}
//---------------------------------------------------------------------------

void __fastcall TForm5::Button2Click(TObject *Sender)
{Edit1->Text="";
 Edit2->Text="";
 Edit3->Text="";
 Edit4->Text="";
 Edit5->Text="";
 Edit6->Text="";
 Edit7->Text="";
 Memo1->Lines->Clear();
}
//---------------------------------------------------------------------------

void __fastcall TForm5::Button3Click(TObject *Sender)
{
    SaveDialog1->Execute();
Memo1->Lines->SaveToFile(SaveDialog1->FileName);
//Edit3->Text->SaveToFile(SaveDialog1->FileName);
//Edit4->Text->SaveToFile(SaveDialog1->FileName);
//Edit5->Text->SaveToFile(SaveDialog1->FileName);
}
//---------------------------------------------------------------------------

